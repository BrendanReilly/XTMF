<!-- 
    Copyright 2014 Travel Modelling Group, Department of Civil Engineering, University of Toronto

    This file is part of XTMF.

    XTMF is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    XTMF is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with XTMF.  If not, see <http://www.gnu.org/licenses/>.
-->
<Application x:Class="XTMF.Gui.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:local="clr-namespace:XTMF.Gui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:XTMFControls="clr-namespace:XTMF.Gui"
             xmlns:UserControl="clr-namespace:XTMF.Gui.UserControls"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <Color x:Key="WarningRed" A="255" R="0xA1" G="0x3B" B="0x45" />
        <Color x:Key="AddingYellow" A="255" R="0x7B" G="0x79" B="0x1E" />
        <Color x:Key="InformationGreen" A="255" R="0" G="140" B="0" />
        <Color x:Key="SelectionBlue" A="255" R="0x55" G="0x6C" B="0x93" />
        <Color x:Key="ControlHeaderColour" A="255" R="0x2F" G="0x47" B="0x6E" />
        <Color x:Key="ControlBackgroundColour" A="255" R="0x1A" G="0x2E" B="0x52" />
        <Color x:Key="FocusColour" A="255" R="0x7E" G="0x93" B="0xB7" />
        <Color x:Key="MultiLayedLayerColour" A="200" R="0x50" G="0x50" B="0x60" />
        <Color x:Key="WindowBackgroundColour" A="255" R="0x09" G="0x18" B="0x32" />
        <SolidColorBrush x:Key="SelectionBlueBrush" Color="{StaticResource ResourceKey=SelectionBlue}" />
        <SolidColorBrush x:Key="FocusBrush" Color="{StaticResource ResourceKey=FocusColour}" />
        <SolidColorBrush x:Key="AddingYellowBrush" Color="{StaticResource ResourceKey=AddingYellow}" />
        <SolidColorBrush x:Key="InformationGreenBrush" Color="{StaticResource ResourceKey=InformationGreen}" />
        <SolidColorBrush x:Key="WarningRedBrush" Color="{StaticResource ResourceKey=WarningRed}" />
        <SolidColorBrush x:Key="ControlBackgroundBrush" Color="{StaticResource ResourceKey=ControlBackgroundColour}" />
        <SolidColorBrush x:Key="ControlHeaderBrush" Color="{StaticResource ResourceKey=ControlHeaderColour}" />
        <SolidColorBrush x:Key="WindowBackgroundBrush"  Color="{StaticResource ResourceKey=WindowBackgroundColour}" />
        <LinearGradientBrush x:Shared="false" x:Name="AnimatedFocusBrush" x:Key="AnimatedFocusBrush">
            <GradientStop Color="{StaticResource FocusColour}" Offset="0.0" />
            <GradientStop Color="{StaticResource FocusColour}" Offset="0.2" />
            <GradientStop Color="White" Offset="0.5" />
            <GradientStop Color="{StaticResource FocusColour}" Offset="0.8" />
            <GradientStop Color="{StaticResource FocusColour}" Offset="1.0" />
        </LinearGradientBrush>
        <Style TargetType="{x:Type ScrollBar}">
        </Style>

        <Style TargetType="{x:Type ScrollViewer}">
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Border Grid.Column="0" BorderThickness="0">
                                <ScrollContentPresenter />
                            </Border>
                            <ScrollBar x:Name="PART_VerticalScrollBar"
                                        Grid.Row="0"
                                        Grid.Column="1"
                                        Value="{TemplateBinding VerticalOffset}"
                                        Maximum="{TemplateBinding ScrollableHeight}"
                                        ViewportSize="{TemplateBinding ViewportHeight}"
                                        Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                       Focusable="False"
                                       IsTabStop="False">
                            </ScrollBar>
                            <ScrollBar x:Name="PART_HorizontalScrollBar"
                                        Orientation="Horizontal"
                                        Grid.Row="1"
                                        Grid.Column="0"
                                        Grid.ColumnSpan="2"
                                        Value="{TemplateBinding HorizontalOffset}"
                                        Maximum="{TemplateBinding ScrollableWidth}"
                                        ViewportSize="{TemplateBinding ViewportWidth}"
                                        Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                       Focusable="False"
                                       IsTabStop="False">
                            </ScrollBar>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type ListViewItem}">
            <Style.Resources>
                <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="Transparent"/>
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Transparent"/>
            </Style.Resources>
            <Setter Property="BorderThickness" Value="0" />
        </Style>

        <!-- Tab control -->

        <Style x:Key="XTMFTabControl"  TargetType="{x:Type TabControl}">
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabControl}">
                        <Grid KeyboardNavigation.TabNavigation="Local">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <TabPanel Name="HeaderPanel" Grid.Row="0" Panel.ZIndex="1" Margin="0,0,4,-1" IsItemsHost="True" KeyboardNavigation.TabIndex="1"
                                    Background="Transparent" />
                            <Border Name="Border" Grid.Row="1" BorderThickness="0"
                                    CornerRadius="2">
                                <ContentPresenter Name="PART_SelectedContentHost" Margin="0" ContentSource="SelectedContent" />
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="Gray" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="XTMFTabItem" TargetType="{x:Type TabItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Grid>
                            <Border
            Name="Border"
            Margin="0,0,2,0"
            BorderBrush="White"
            BorderThickness="1,1,1,1"
            CornerRadius="0,0,0,0">
                                <Border.Background>
                                    <SolidColorBrush x:Name="BackgroundBrush" Color="{StaticResource ResourceKey=ControlBackgroundColour}" />
                                </Border.Background>
                                <ContentPresenter x:Name="ContentSite" VerticalAlignment="Center" HorizontalAlignment="Center"
                                                ContentSource="Header" Margin="12,2,12,2" RecognizesAccessKey="True" />
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True" />
                                    <Condition Property="IsSelected" Value="False" />
                                </MultiTrigger.Conditions>
                                <MultiTrigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Duration="0:0:0.25"
                    Storyboard.TargetName="BackgroundBrush"
                    Storyboard.TargetProperty="Color" To="{StaticResource ResourceKey=SelectionBlue}" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiTrigger.EnterActions>
                                <MultiTrigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard FillBehavior="Stop">
                                            <ColorAnimation Duration="0:0:0.25"
                    Storyboard.TargetName="BackgroundBrush"
                    Storyboard.TargetProperty="Color" To="{StaticResource ResourceKey=ControlBackgroundColour}" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiTrigger.ExitActions>
                            </MultiTrigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ColorAnimation Duration="0:0:0.25"
                    Storyboard.TargetName="BackgroundBrush"
                    Storyboard.TargetProperty="Color" To="{StaticResource ResourceKey=FocusColour}" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard FillBehavior="Stop">
                                            <ColorAnimation Duration="0:0:0.25"
                    Storyboard.TargetName="BackgroundBrush"
                    Storyboard.TargetProperty="Color" To="{StaticResource ResourceKey=ControlBackgroundColour}" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>

                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="Border" Property="BorderBrush" Value="Gray" />
                                <Setter TargetName="Border" Property="Label.Foreground" Value="Gray" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Expander -->

        <ControlTemplate x:Key="ExpanderToggleButton"
                 TargetType="{x:Type ToggleButton}">
            <Border x:Name="Border"
          CornerRadius="15,15,15,15"
          BorderThickness="2,2,2,2">
                <Border.Background>
                    <SolidColorBrush Color="{StaticResource ResourceKey=ControlBackgroundColour}" />
                </Border.Background>
                <Border.BorderBrush>
                    <SolidColorBrush Color="White" />
                </Border.BorderBrush>
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal" />
                        <VisualState x:Name="MouseOver">
                            <Storyboard>
                                <ColorAnimation Storyboard.TargetName="Border"
                                          Storyboard.TargetProperty="(Panel.Background).
                (SolidColorBrush.Color)" To="{StaticResource ResourceKey=SelectionBlue}" Duration="0:0:0.5" />
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Pressed">
                            <Storyboard>
                                <ColorAnimation Storyboard.TargetName="Border"
                                          Storyboard.TargetProperty="(Panel.Background).
                (SolidColorBrush.Color)" To="{StaticResource ResourceKey=FocusColour}" Duration="0:0:0.5" />
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Disabled">
                            <Storyboard>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                          Storyboard.TargetProperty="(Panel.Background).
                (SolidColorBrush.Color)">
                                    <EasingColorKeyFrame KeyTime="0"
                                   Value="{StaticResource ResourceKey=ControlBackgroundColour}" />
                                </ColorAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                          Storyboard.TargetProperty="(Panel.Background).
                (SolidColorBrush.Color)">
                                    <EasingColorKeyFrame KeyTime="0"
                                   Value="{StaticResource ResourceKey=ControlBackgroundColour}" />
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                    </VisualStateGroup>
                    <VisualStateGroup x:Name="CheckStates">
                        <VisualState x:Name="Checked">
                            <Storyboard>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                           Storyboard.TargetName="CollapsedArrow">
                                    <DiscreteObjectKeyFrame KeyTime="0"
                                      Value="{x:Static Visibility.Hidden}" />
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                           Storyboard.TargetName="ExpandededArrow">
                                    <DiscreteObjectKeyFrame KeyTime="0"
                                      Value="{x:Static Visibility.Visible}" />
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Unchecked" />
                        <VisualState x:Name="Indeterminate" />
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
                <Grid>
                    <Path x:Name="CollapsedArrow"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            Data="M 0 0 L 4 4 L 8 0 Z">
                        <Path.Fill>
                            <SolidColorBrush Color="White" />
                        </Path.Fill>
                    </Path>
                    <Path x:Name="ExpandededArrow"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            Visibility="Collapsed"
            Data="M 0 4 L 4 0 L 8 4 Z">
                        <Path.Fill>
                            <SolidColorBrush Color="White" />
                        </Path.Fill>
                    </Path>
                </Grid>
            </Border>
        </ControlTemplate>


        <!-- Expander -->

        <ControlTemplate x:Key="ParameterNameButtonStyle"
                 TargetType="{x:Type ToggleButton}">
            <Border x:Name="Border"
          BorderThickness="0" Background="Transparent" Cursor="Hand">
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal" />
                        <VisualState x:Name="MouseOver">
                        </VisualState>
                        <VisualState x:Name="Pressed">
                        </VisualState>
                    </VisualStateGroup>
                    <VisualStateGroup x:Name="CheckStates">
                        <VisualState x:Name="Checked">
                            <Storyboard>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                           Storyboard.TargetName="CollapsedArrow">
                                    <DiscreteObjectKeyFrame KeyTime="0"
                                      Value="{x:Static Visibility.Hidden}" />
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                           Storyboard.TargetName="ExpandededArrow">
                                    <DiscreteObjectKeyFrame KeyTime="0"
                                      Value="{x:Static Visibility.Visible}" />
                                </ObjectAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Unchecked" />
                        <VisualState x:Name="Indeterminate" />
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
                <Grid>
                    <TextBlock x:Name="CollapsedArrow" Foreground="White" FontStyle="Italic" Text="(Show More)" Cursor="Hand" FontSize="12" VerticalAlignment="Center" />
                    <TextBlock x:Name="ExpandededArrow" Foreground="White" FontStyle="Italic" Text="(Show Less)" Visibility="Hidden" FontSize="12" VerticalAlignment="Center" />
                </Grid>
            </Border>
        </ControlTemplate>

        <Style x:Key="ParameterNameStyle" TargetType="{x:Type Expander}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate x:Name="ParameterNameStyleTemplate" TargetType="{x:Type Expander}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition x:Name="ContentRow"
                           Height="0" />
                            </Grid.RowDefinitions>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver" />
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                          Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">

                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource ResourceKey=ControlBackgroundColour}" />
                                            </ColorAnimationUsingKeyFrames>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                          Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource ResourceKey=ControlBackgroundColour}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid x:Name="Border" Grid.Row="0">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="AUTO" />
                                    </Grid.ColumnDefinitions>
                                    <ToggleButton Grid.Column="1" HorizontalAlignment="Right" x:Name="ParameterNameButtonStyle" OverridesDefaultStyle="True"
                                Template="{StaticResource ParameterNameButtonStyle}"
                                IsChecked="{Binding IsExpanded, Mode=TwoWay,
                      RelativeSource={RelativeSource TemplatedParent}}" IsTabStop="False">
                                        <ToggleButton.Background>
                                            <SolidColorBrush Color="Transparent" />
                                        </ToggleButton.Background>
                                    </ToggleButton>
                                    <ContentPresenter Grid.Column="0"
                                Margin="4"
                                ContentSource="Header"
                                RecognizesAccessKey="True" />
                                </Grid>
                            </Grid>
                            <Border x:Name="Content"
                  Grid.Row="1"
                  Focusable="False"
                  BorderThickness="2,0,0,0"
                  CornerRadius="20,20,20,20">
                                <Border.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform x:Name="ScaleTransform" />
                                        <TranslateTransform x:Name="TranslateTransform" />
                                    </TransformGroup>
                                </Border.RenderTransform>
                                <Border.Background>
                                    <SolidColorBrush Color="Transparent" />
                                </Border.Background>
                                <ContentPresenter x:Name="ContentHost" Margin="4" />
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded" Value="True">
                                <Trigger.Setters>
                                    <Setter Property="Height" TargetName="ContentRow" Value="{Binding DesiredHeight, Source=Content}" />
                                </Trigger.Setters>
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation From="0" To="1" Duration="0:0:0.20" Storyboard.TargetName="ScaleTransform" Storyboard.TargetProperty="ScaleY" />
                                            <DoubleAnimation From="0" To="1" Duration="0:0:0.40" Storyboard.TargetName="Content" Storyboard.TargetProperty="Opacity" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style TargetType="Menu">
            <Setter Property="Background" Value="{StaticResource ControlBackgroundBrush}" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="FontSize" Value="14"/>
        </Style>

        <Style TargetType="MenuItem">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Background" Value="{StaticResource ControlBackgroundBrush}" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="BorderThickness" Value="0" />
            <Style.Triggers>
                <Trigger Property="IsHighlighted" Value="True">
                    <Setter Property="Background" Value="{StaticResource FocusBrush}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <ControlTemplate x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}" TargetType="MenuItem">
            <Border Background="{StaticResource ControlBackgroundBrush}" x:Name="_grid" Padding="2" BorderThickness="0" BorderBrush="{StaticResource ControlBackgroundBrush}" >
                <Grid >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" MinWidth="24" SharedSizeGroup="IconGroup"/>
                        <ColumnDefinition Width="Auto" MinWidth="30" />
                        <ColumnDefinition Width="20" />
                    </Grid.ColumnDefinitions>
                    <ContentPresenter ContentSource="Icon" Margin="{TemplateBinding Padding}" />
                    <ContentPresenter Grid.Column="1" VerticalAlignment="Center" ContentSource="Header" RecognizesAccessKey="True" />
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsHighlighted" Value="True">
                    <Setter Property="Background" Value="{StaticResource FocusBrush}" TargetName="_grid"/>
                    <Setter Property="BorderBrush" Value="Black" TargetName="_grid"/>
                    <Setter Property="Foreground" Value="White" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground" Value="Gray" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <ControlTemplate x:Key="{x:Static MenuItem.SubmenuHeaderTemplateKey}" TargetType="MenuItem">
            <Border Background="{StaticResource ControlBackgroundBrush}" Padding="0" x:Name="_grid" BorderThickness="0" >
                <Grid >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" MinWidth="24" SharedSizeGroup="IconGroup"/>
                        <ColumnDefinition Width="Auto" MinWidth="30"/>
                        <ColumnDefinition Width="*" MinWidth="30"/>
                        <ColumnDefinition Width="18" MinWidth="0" />
                    </Grid.ColumnDefinitions>
                    <Path Data="M 0,2 L 10,10 L 0,18 Z" Fill="White" Grid.Column="3" Margin="0,0,0,0" />
                    <ContentPresenter ContentSource="Icon" Margin="{TemplateBinding Padding}" />
                    <ContentPresenter Grid.Column="1" ContentSource="Header" RecognizesAccessKey="True" Margin="{TemplateBinding Padding}" />
                    <Popup x:Name="popup" PlacementTarget="{Binding ElementName=_grid}" Placement="Right" HorizontalOffset="0">
                        <Border BorderBrush="White" BorderThickness="1">
                            <ItemsPresenter x:Name="_items" />
                        </Border>
                    </Popup>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsHighlighted" Value="True" >
                    <Setter Property="Visibility" Value="Visible" TargetName="_items" />
                    <Setter Property="IsOpen" Value="True" TargetName="popup" />
                    <Setter Property="Background" Value="{StaticResource FocusBrush}" TargetName="_grid"/>
                    <Setter Property="BorderBrush" Value="White" TargetName="_grid"/>
                    <Setter Property="Foreground" Value="White" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>


        <Style TargetType="Separator" x:Key="{x:Static MenuItem.SeparatorStyleKey}">
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Separator">
                        <Grid Background="{StaticResource ControlBackgroundBrush}">
                            <Border Background="White" Height="2" Margin="5,2,5,2" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


    </Application.Resources>
</Application>