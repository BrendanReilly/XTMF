<!-- 
    Copyright 2015-2016 Travel Modelling Group, Department of Civil Engineering, University of Toronto

    This file is part of XTMF.

    XTMF is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    XTMF is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with XTMF.  If not, see <http://www.gnu.org/licenses/>.
-->
<UserControl x:Class="XTMF.Gui.UserControls.ValidationErrorListControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:XTMF.Gui.UserControls"
             mc:Ignorable="d" Name="ValidationErrorListControlControlName" BorderThickness="0 0 0 1" BorderBrush="{DynamicResource HighlightBrush1}"
             d:DesignHeight="80" d:DesignWidth="300" >
   
    
    <UserControl.Resources>
        <Style TargetType="{x:Type local:ValidationErrorListControl}">

            <Style.Triggers>
                <MultiDataTrigger >
                    <MultiDataTrigger.Conditions>
                        <Condition Value="True" Binding="{Binding RelativeSource={RelativeSource Self},Path=IsMouseOver}"></Condition>
                        <Condition  Value="False"   Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=ListViewItem},Path=IsSelected,Mode=TwoWay}"></Condition>
                    </MultiDataTrigger.Conditions>

                    <MultiDataTrigger.Setters>
                        <Setter Property="Background" Value="{DynamicResource FocusBrushHover2}"></Setter>
                        <Setter Property="Foreground" Value="White"></Setter>
                    </MultiDataTrigger.Setters>

                </MultiDataTrigger>

                <MultiDataTrigger >
                    <MultiDataTrigger.Conditions>
                        <Condition Value="False" Binding="{Binding RelativeSource={RelativeSource Self},Path=IsMouseOver}"></Condition>
                        <Condition  Value="True"   Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=ListViewItem},Path=IsSelected,Mode=TwoWay}"></Condition>
                    </MultiDataTrigger.Conditions>

                    <MultiDataTrigger.Setters>
                        <Setter Property="Background" Value="{DynamicResource FocusBrushHover3}"></Setter>
                    </MultiDataTrigger.Setters>
                </MultiDataTrigger>

                <MultiDataTrigger >
                    <MultiDataTrigger.Conditions>
                        <Condition Value="True" Binding="{Binding RelativeSource={RelativeSource Self},Path=IsMouseOver}"></Condition>
                        <Condition  Value="True"   Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=ListViewItem},Path=IsSelected,Mode=TwoWay}"></Condition>
                    </MultiDataTrigger.Conditions>

                    <MultiDataTrigger.Setters>
                        <Setter Property="Background" Value="{DynamicResource FocusBrushHover3}"></Setter>
                    </MultiDataTrigger.Setters>
                </MultiDataTrigger>
                
     
                <DataTrigger Value="True"   Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=ListViewItem},Path=IsSelected,Mode=TwoWay}">
                    <Setter Property="Foreground" Value="White"></Setter>
                </DataTrigger>

                <DataTrigger Value="False"   Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=ListViewItem},Path=IsSelected,Mode=TwoWay}">
                    <Setter Property="Foreground" Value="{DynamicResource ThemeTextColorBrush}"></Setter>
                </DataTrigger>

            </Style.Triggers>
        </Style>
    </UserControl.Resources>

    <Border Background="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:ValidationErrorListControl},Path=Background,Mode=TwoWay}" BorderThickness="0,1,0,1" BorderBrush="{DynamicResource WindowBackgroundBrush4}">
        <Grid Margin="0,0,0,10" HorizontalAlignment="Stretch" MaxWidth="{Binding RelativeSource={RelativeSource Mode=FindAncestor,
                                                    AncestorType=local:ModelSystemDisplay}, Path=ParameterWidth}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="150"></ColumnDefinition>
                <ColumnDefinition Width="*"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <Label Name="ModuleNameLabel" Style="{DynamicResource HoverLabel}" HorizontalAlignment="Left" Tag="{Binding DisplayModule}" Foreground="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:ValidationErrorListControl},Path=Foreground,Mode=TwoWay}" VerticalAlignment="Center"  Grid.Column="0"  >
                <TextBlock Foreground="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:ValidationErrorListControl},Path=Foreground,Mode=TwoWay}" TextWrapping="WrapWithOverflow" TextDecorations="Underline"  Text="{Binding ModuleName}"></TextBlock>
            </Label>
 
            <TextBlock VerticalAlignment="Center" Name="ErrorStringTextBlock" TextWrapping="WrapWithOverflow"   Grid.Column="2" Foreground="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=local:ValidationErrorListControl},Path=Foreground,Mode=TwoWay}"  Text="{Binding ErrorString}"></TextBlock>

        </Grid>
    </Border>

  
     
</UserControl>
