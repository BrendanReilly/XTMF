<!-- 
    Copyright 2014-2016 Travel Modelling Group, Department of Civil Engineering, University of Toronto

    This file is part of XTMF.

    XTMF is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    XTMF is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with XTMF.  If not, see <http://www.gnu.org/licenses/>.
-->
<Window x:Class="XTMF.Gui.UserControls.LinkedParameterDisplay"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:xtmfgui="clr-namespace:XTMF.Gui.UserControls"
             xmlns:my="clr-namespace:XTMF.Gui"
                WindowStyle="ToolWindow"
                WindowStartupLocation="CenterOwner"
                Title="Linked Parameter Editor" Height="480" Width="750">
    <Grid Background="{StaticResource WindowBackgroundBrush}">
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Grid Grid.Row="1" Margin="0" Background="{DynamicResource DarkGrayBackgroundBrush}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <!--<my:HintedTextBox Grid.Column="0" Margin="5" x:Name="LinkedParameterValue" HintText="Linked Parameter Value" Width="250" Height="Auto"/>-->
            <my:BorderIconButton BorderThickness="0" HorizontalAlignment="Left" Grid.Column="0" Header="New"  HighlightColour="{StaticResource AddingYellow}" Text="Create new Linked Parameter" Clicked="NewLinkedParameter_Clicked"
                                 Icon="/XTMF.Gui;component/Resources/Plus.png" Margin="2"/>

            <DockPanel Grid.Column="1"/>
        </Grid>
        <Grid Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" MinWidth="325" />
                <ColumnDefinition Width="AUTO" />
                <ColumnDefinition Width="*" MinWidth="50"/>
            </Grid.ColumnDefinitions>
            <Grid Grid.Column="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="AUTO" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <my:FilterBox Grid.Row="0" x:Name="LinkedParameterFilterBox" KeyDown="LinkedParameterFilterBox_KeyDown" />
                <ListView Grid.Row="1" ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.HorizontalScrollBarVisibility="Disabled" x:Name="Display"
                          Background="{DynamicResource MediumGrayBackgroundBrush}" KeyDown="LinkedParameterValue_PreviewKeyDown">
                    <ListView.Resources>
                        <Style TargetType="{x:Type ListViewItem}">
                            <!--<Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" /> -->
                        </Style>
                    </ListView.Resources>
                    <ListView.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel Orientation="Horizontal" />
                        </ItemsPanelTemplate>
                    </ListView.ItemsPanel>
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <my:BorderIconButton IsTabStop="True" MouseRightButtonDown="BorderIconButton_MouseRightButtonDown" Margin="4" Header="{Binding Name}" ShadowColour="{StaticResource ControlHeaderColour}"
                                             Icon="/XTMF.Gui;component/Resources/Settings.png" DoubleClicked="BorderIconButton_DoubleClicked" Width="300px"  >
                                <my:BorderIconButton.Style>
                                    <Style TargetType="my:BorderIconButton">
                                        <!--   <Setter Property="Selected" Value="{Binding IsSelected, Mode=TwoWay}" /> -->
                                    </Style>
                                </my:BorderIconButton.Style>
                            </my:BorderIconButton>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                    <ListView.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="Rename (F2)" Click="Rename_Click">
                                <MenuItem.Icon>
                                    <Image Source="/XTMF.Gui;component/Resources/base_cog_32.png" Width="16" Height="16" />
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem Header="Delete" Click="RemoveLinkedParameter_Click">
                                <MenuItem.Icon>
                                    <Image Source="/XTMF.Gui;component/Images/Delete.png" Width="16" Height="16" />
                                </MenuItem.Icon>
                            </MenuItem>
                        </ContextMenu>
                    </ListView.ContextMenu>
                </ListView>
            </Grid>
            <GridSplitter Grid.Column="1" Width="4" HorizontalAlignment="Center" VerticalAlignment="Stretch" IsTabStop="False" Background="White" ShowsPreview="True" />
            <Grid Grid.Column="2" Background="{DynamicResource MediumGrayBackgroundBrush}">
                <Grid.RowDefinitions>

                    <RowDefinition Height="AUTO" />
                    <RowDefinition Height="*" />

                </Grid.RowDefinitions>
                <!-- <my:FilterBox Grid.Row="0" x:Name="ContainedParameterFilterBox" /> -->

                <Border Grid.Row="0" BorderThickness="1" Margin="5,5,5,0" BorderBrush="{DynamicResource DarkGrayBackgroundBrush}">
                    <StackPanel >

                        <Label Content="Parameter Properties" Foreground="White" Margin="0,0,0,10" Background="{DynamicResource DarkGrayBackgroundBrush}"/>

                        <DockPanel FlowDirection="LeftToRight" >
                            <Label Content="Name" Width="50" Foreground="White" Margin="5,5,35,5" Padding="0" DockPanel.Dock="Left"></Label>

                            <my:HintedTextBox Margin="5,5,5,8"  x:Name="LinkedParameterName" DockPanel.Dock="Right"/>
                        </DockPanel>

                        <DockPanel FlowDirection="LeftToRight" >
                            <Label Content="Value" Width="50"  Foreground="White" Margin="5,5,35,5" Padding="0" DockPanel.Dock="Left"></Label>

                            <my:HintedTextBox Margin="5,5,5,8"  x:Name="LinkedParameterValue" DockPanel.Dock="Right"/>
                        </DockPanel>
                    </StackPanel>
                </Border>


                <Border Grid.Row="1" BorderThickness="1" Margin="5,5,5,0" BorderBrush="{DynamicResource DarkGrayBackgroundBrush}">
                    <StackPanel Background="{DynamicResource MediumGrayBackgroundBrush}" >

                        <Label Content="Linked Parameters" Foreground="White" Margin="0,0,0,10" Background="{DynamicResource DarkGrayBackgroundBrush}"/>
                        <ListView KeyDown="ContainedParameterDisplay_KeyDown" BorderThickness="0"  ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                               x:Name="ContainedParameterDisplay" Focusable="False"  Background="{StaticResource WindowBackgroundBrush}"
                     HorizontalContentAlignment="Stretch">
                            <ListView.Resources>
                                <Style TargetType="{x:Type ListViewItem}">
                                    <!--<Setter Property="Focusable" Value="False"></Setter>-->
                                    <!--<Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" /> -->
                                    <Setter Property="BorderThickness" Value="0" />
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="Transparent" />
                                            <Setter Property="BorderBrush" Value="Transparent" />
                                            <Setter Property="BorderThickness" Value="0" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </ListView.Resources>
                            <ListView.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel Orientation="Vertical" HorizontalAlignment="Stretch">

                                    </StackPanel>
                                </ItemsPanelTemplate>
                            </ListView.ItemsPanel>
                            <ListView.ItemTemplate>
                                <DataTemplate DataType="{x:Type xtmfgui:LinkedParameterDisplay+ParameterDisplay}">
                                    <Border BorderBrush="White" BorderThickness="0" Margin="2" HorizontalAlignment="Stretch">
                                        <Grid HorizontalAlignment="Stretch">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="50" />
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="AUTO">
                                                </RowDefinition>
                                                <RowDefinition Height="AUTO" />
                                            </Grid.RowDefinitions>


                                            <Label Tag="{Binding ParameterName}" MouseDown="Unlink_MouseDown" Grid.Column="0" Grid.Row="0" Grid.RowSpan="2" VerticalAlignment="Center" Cursor="Hand" >
                                                <Label.Foreground>
                                                    <SolidColorBrush Color="#FF0078D7"/>
                                                </Label.Foreground>
                                                <TextBlock TextDecorations="Underline">Unlink</TextBlock>
                                            </Label>

                                            <!--
                                            <CheckBox Name="Checkbox"   IsChecked="{Binding KeepAttached}"
                                                  ToolTip="Uncheck to remove this parameter from the linked parameter.">
                                                
                                            </CheckBox> -->
                                            <TextBlock Grid.Column="1" Margin="2" Grid.Row="0" Foreground="#96FFFFFF" FontSize="10" Text="Module Name" Opacity="0.995" />
                                            <TextBlock Grid.Column="1" Margin="2" Grid.Row="1" Foreground="White" FontSize="14" Text="{Binding ModuleName, Mode=OneTime}" />

                                            <TextBlock Grid.Column="2" Margin="2" Grid.Row="0" Foreground="#96FFFFFF" FontSize="10" Text="Parameter Name" Opacity="0.995" />
                                            <TextBlock Grid.Column="2" Grid.Row="1" Margin="2" Foreground="White" FontSize="14" Text="{Binding ParameterName, Mode=OneTime}" />
                                        </Grid>
                                    </Border>
                                </DataTemplate>


                            </ListView.ItemTemplate>
                        </ListView>
                    </StackPanel>
                </Border>
            </Grid>
        </Grid>
    </Grid>
</Window>
