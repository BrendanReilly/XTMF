<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:XTMFControls="clr-namespace:XTMF.Gui"
             xmlns:UserControl="clr-namespace:XTMF.Gui.UserControls"
                    xmlns:local="clr-namespace:XTMF.Gui.UserControls">


    <MenuScrollingVisibilityConverter x:Key="MenuScrollingVisibilityConverter" />

    <Style x:Key="MenuScrollViewer"
       TargetType="{x:Type ScrollViewer}"
       BasedOn="{x:Null}">
        <Setter Property="HorizontalScrollBarVisibility"
          Value="Hidden" />
        <Setter Property="VerticalScrollBarVisibility"
          Value="Auto" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Border Grid.Row="1"
                  Grid.Column="0">
                            <ScrollContentPresenter Margin="{TemplateBinding Padding}" />
                        </Border>


                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type Menu}"
       TargetType="{x:Type Menu}">
        <Setter Property="OverridesDefaultStyle"
          Value="True" />
        <Setter Property="SnapsToDevicePixels"
          Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Menu}">

                    <Border BorderThickness="0" Background="{DynamicResource WindowBackgroundBrush1}">


                        <StackPanel ClipToBounds="True"
                      Orientation="Horizontal"
                      IsItemsHost="True" />

                    </Border>
                </ControlTemplate>
            </Setter.Value>


        </Setter>

        <Setter Property="Foreground">
            <Setter.Value>
                <SolidColorBrush Color="#FFFFFFFF" />
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}"
       TargetType="{x:Type Separator}">
        <Setter Property="Height"
          Value="1" />
        <Setter Property="Margin"
          Value="0,0,0,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                    <Border BorderThickness="1">
                        <Border.BorderBrush>
                            <SolidColorBrush Color="{DynamicResource BorderMediumColor}" />
                        </Border.BorderBrush>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- TopLevelHeader -->
    <ControlTemplate x:Key="{x:Static MenuItem.TopLevelHeaderTemplateKey}"
                 TargetType="{x:Type MenuItem}">
        <Border x:Name="Border" Height="28" >
            <Grid>
                <ContentPresenter Margin="6,3,6,3"
                        ContentSource="Header"
                        RecognizesAccessKey="True" />
                <Popup x:Name="Popup"
             Placement="Bottom"
             IsOpen="{TemplateBinding IsSubmenuOpen}"
             AllowsTransparency="True"
             Focusable="False"
             PopupAnimation="Fade">
                    <Border x:Name="SubmenuBorder"
                SnapsToDevicePixels="True"
                BorderThickness="1" Margin="10"
                Background="{DynamicResource WindowBackgroundBrush1}">
                        <Border.BorderBrush>
                            <SolidColorBrush Color="{DynamicResource BorderMediumColor}" />
                        </Border.BorderBrush>
                        <ScrollViewer CanContentScroll="True"
                        Style="{StaticResource MenuScrollViewer}">
                            <StackPanel IsItemsHost="True"
                        KeyboardNavigation.DirectionalNavigation="Cycle" />
                        </ScrollViewer>

                        <Border.Effect>
                            <DropShadowEffect Color="Black" ShadowDepth="5" BlurRadius="8" Opacity="0.4"/>
                        </Border.Effect>
                    </Border>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSuspendingPopupAnimation"
             Value="true">
                <Setter TargetName="Popup"
              Property="PopupAnimation"
              Value="None" />
            </Trigger>
            <Trigger Property="IsHighlighted"
             Value="true">
                <Setter TargetName="Border"
              Property="BorderBrush"
              Value="Transparent" />
                <Setter Property="Background"
              TargetName="Border">
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="0,0"
                               EndPoint="0,1">
                            <LinearGradientBrush.GradientStops>
                                <GradientStopCollection>
                                    <GradientStop Color="#333333" />
                                    <GradientStop Color="#444444"
                              Offset="1.0" />
                                </GradientStopCollection>
                            </LinearGradientBrush.GradientStops>
                        </LinearGradientBrush>

                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger SourceName="Popup"
             Property="AllowsTransparency"
             Value="True">
                <Setter TargetName="SubmenuBorder"
              Property="CornerRadius"
              Value="0,0,4,4" />
                <Setter TargetName="SubmenuBorder"
              Property="Padding"
              Value="0,0,0,3" />
            </Trigger>
            <Trigger Property="IsEnabled"
             Value="False">
                <Setter Property="Foreground">
                    <Setter.Value>
                        <SolidColorBrush Color="{StaticResource DisabledForegroundColor}" />
                    </Setter.Value>
                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- TopLevelItem -->
    <ControlTemplate x:Key="{x:Static MenuItem.TopLevelItemTemplateKey}"
                 TargetType="{x:Type MenuItem}">
        <Border x:Name="Border" >
            <Grid>
                <ContentPresenter Margin="6,3,6,3"
                        ContentSource="Header"
                        RecognizesAccessKey="True" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsHighlighted"
             Value="true">
                <Setter Property="Background"
              TargetName="Border">
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="0,0"
                               EndPoint="0,1">
                            <LinearGradientBrush.GradientStops>
                                <GradientStopCollection>
                                    <GradientStop Color="#333333" />
                                    <GradientStop Color="#444444"
                              Offset="1.0" />
                                </GradientStopCollection>
                            </LinearGradientBrush.GradientStops>
                        </LinearGradientBrush>

                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsEnabled"
             Value="False">
                <Setter Property="Foreground">
                    <Setter.Value>
                        <SolidColorBrush Color="{StaticResource DisabledForegroundColor}" />
                    </Setter.Value>
                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- SubmenuItem -->
    <ControlTemplate x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}"
                 TargetType="{x:Type MenuItem}">
        <Border x:Name="Border" Height="28" VerticalAlignment="Center"
          BorderThickness="1">


            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="30"
                          SharedSizeGroup="Icon" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto"
                          SharedSizeGroup="Shortcut" />
                    <ColumnDefinition Width="13" />
                </Grid.ColumnDefinitions>
                <ContentPresenter x:Name="Icon"
                        Margin="6,0,6,0"
                        VerticalAlignment="Center"
                        ContentSource="Icon" />
                <Border Grid.Column="0" x:Name="Check"
              Width="13"
              Height="13"
              Visibility="Collapsed"
              Margin="6,0,6,0"
              BorderThickness="1">
                    <Border.BorderBrush>
                        <LinearGradientBrush StartPoint="0,0"
                               EndPoint="0,1">
                            <LinearGradientBrush.GradientStops>
                                <GradientStopCollection>
                                    <GradientStop Color="#333333"
                              Offset="0.0" />
                                    <GradientStop Color="#444444"
                              Offset="1.0" />
                                </GradientStopCollection>
                            </LinearGradientBrush.GradientStops>
                        </LinearGradientBrush>

                    </Border.BorderBrush>
                    <Border.Background>
                        <LinearGradientBrush StartPoint="0,0"
                               EndPoint="0,1">
                            <LinearGradientBrush.GradientStops>
                                <GradientStopCollection>
                                    <GradientStop Color="#000" />
                                    <GradientStop Color="#111"
                              Offset="1.0" />
                                </GradientStopCollection>
                            </LinearGradientBrush.GradientStops>
                        </LinearGradientBrush>
                    </Border.Background>
                    <Path x:Name="CheckMark"
              Width="7"
              Height="7"
              Visibility="Hidden"
              SnapsToDevicePixels="False"
              StrokeThickness="2"
              Data="M 0 0 L 7 7 M 0 7 L 7 0">
                        <Path.Stroke>
                            <SolidColorBrush Color="#CCCCCC" />
                        </Path.Stroke>
                    </Path>
                </Border>
                <ContentPresenter x:Name="HeaderHost" VerticalAlignment="Center"
                        Grid.Column="1"
                        ContentSource="Header"
                        RecognizesAccessKey="True" />
                <TextBlock x:Name="InputGestureText"
                 Grid.Column="2"
                 Text="{TemplateBinding InputGestureText}"
                 Margin="5,2,0,2"
                 DockPanel.Dock="Right" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="ButtonBase.Command"
             Value="{x:Null}" />
            <Trigger Property="Icon"
             Value="{x:Null}">
                <Setter TargetName="Icon"
              Property="Visibility"
              Value="Hidden" />
            </Trigger>
            <Trigger Property="IsChecked"
             Value="true">
                <Setter TargetName="CheckMark"
              Property="Visibility"
              Value="Visible" />
            </Trigger>
            <Trigger Property="IsCheckable"
             Value="true">
                <Setter TargetName="Check"
              Property="Visibility"
              Value="Visible" />
                <Setter TargetName="Icon"
              Property="Visibility"
              Value="Hidden" />
            </Trigger>
            <Trigger Property="IsHighlighted"
             Value="true">
                <Setter Property="Background"
              TargetName="Border">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="0.5,1"
                               StartPoint="0.5,0">
                            <GradientStop Color="#333333"
                          Offset="0" />
                            <GradientStop Color="#444444"
                          Offset="1" />
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="BorderBrush"
              TargetName="Border">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="0.5,1"
                               StartPoint="0.5,0">
                            <GradientStop Color="#333333"
                          Offset="0" />
                            <GradientStop Color="#444444"
                          Offset="1" />
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsEnabled"
             Value="false">
                <Setter Property="Foreground">
                    <Setter.Value>
                        <SolidColorBrush Color="{StaticResource DisabledForegroundColor}" />
                    </Setter.Value>
                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{x:Static MenuItem.SubmenuHeaderTemplateKey}"
                 TargetType="{x:Type MenuItem}">
        <Border x:Name="Border"
          BorderThickness="0" Height="28">


            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="30"
                          SharedSizeGroup="Icon" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto"
                          SharedSizeGroup="Shortcut" />
                    <ColumnDefinition Width="13" />
                </Grid.ColumnDefinitions>
                <ContentPresenter x:Name="Icon"
                        Margin="6,0,6,0"
                        VerticalAlignment="Center"
                        ContentSource="Icon" />
                <ContentPresenter x:Name="HeaderHost"
                        Grid.Column="1"
                        ContentSource="Header"
                        RecognizesAccessKey="True" VerticalAlignment="Center" />
                <TextBlock x:Name="InputGestureText"
                 Grid.Column="2"
                 Text="{TemplateBinding InputGestureText}"
                 Margin="5,2,2,2"
                 DockPanel.Dock="Right" />
                <Path Grid.Column="3"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            Data="M 0 0 L 0 7 L 4 3.5 Z">
                    <Path.Fill>
                        <SolidColorBrush Color="{DynamicResource GlyphColor}" />
                    </Path.Fill>
                </Path>
                <Popup x:Name="Popup"
             Placement="Right"
             HorizontalOffset="-4"
             IsOpen="{TemplateBinding IsSubmenuOpen}"
             AllowsTransparency="True"
             Focusable="False"
             PopupAnimation="Fade">
                    <Border x:Name="SubmenuBorder"
                SnapsToDevicePixels="True"
                Background="{DynamicResource WindowBackgroundBrush1}"
                BorderThickness="1" Margin="9">

                        <Border.Effect>
                            <DropShadowEffect Color="Black" ShadowDepth="5" BlurRadius="8" Opacity="0.4"/>
                        </Border.Effect>
                        <Border.BorderBrush>
                            <SolidColorBrush Color="{DynamicResource BorderMediumColor}" />
                        </Border.BorderBrush>
                        <ScrollViewer CanContentScroll="True"
                        Style="{StaticResource MenuScrollViewer}">
                            <StackPanel IsItemsHost="True"
                        KeyboardNavigation.DirectionalNavigation="Cycle" />
                        </ScrollViewer>
                    </Border>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon"
             Value="{x:Null}">
                <Setter TargetName="Icon"
              Property="Visibility"
              Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsHighlighted"
             Value="true">
                <Setter Property="Background"
              TargetName="Border">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="0.5,1"
                               StartPoint="0.5,0">
                            <GradientStop Color="#333333"
                          Offset="0" />
                            <GradientStop Color="#444444"
                          Offset="1" />
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="BorderBrush"
              TargetName="Border">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="0.5,1"
                               StartPoint="0.5,0">
                            <GradientStop Color="#333333"
                          Offset="0" />
                            <GradientStop Color="#444444"
                          Offset="1" />
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger SourceName="Popup"
             Property="AllowsTransparency"
             Value="True">
                <Setter TargetName="SubmenuBorder"
              Property="CornerRadius"
              Value="4" />
                <Setter TargetName="SubmenuBorder"
              Property="Padding"
              Value="0,3,0,3" />
            </Trigger>
            <Trigger Property="IsEnabled"
             Value="false">
                <Setter Property="Foreground">
                    <Setter.Value>
                        <SolidColorBrush Color="{StaticResource DisabledForegroundColor}" />
                    </Setter.Value>
                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- MenuItem Style -->
    <Style x:Key="{x:Type MenuItem}"
       TargetType="{x:Type MenuItem}">
        <Setter Property="OverridesDefaultStyle"
          Value="True" />
        <Style.Triggers>
            <Trigger Property="Role"
             Value="TopLevelHeader">
                <Setter Property="Template"
              Value="{StaticResource {x:Static MenuItem.TopLevelHeaderTemplateKey}}" />
                <Setter Property="Grid.IsSharedSizeScope"
              Value="true" />
            </Trigger>
            <Trigger Property="Role"
             Value="TopLevelItem">
                <Setter Property="Template"
              Value="{StaticResource {x:Static MenuItem.TopLevelItemTemplateKey}}" />
            </Trigger>
            <Trigger Property="Role"
             Value="SubmenuHeader">
                <Setter Property="Template"
              Value="{StaticResource {x:Static MenuItem.SubmenuHeaderTemplateKey}}" />
            </Trigger>
            <Trigger Property="Role"
             Value="SubmenuItem">
                <Setter Property="Template"
              Value="{StaticResource {x:Static MenuItem.SubmenuItemTemplateKey}}" />
            </Trigger>
        </Style.Triggers>
    </Style>



    <Style TargetType="{x:Type ContextMenu}">
        <Setter Property="SnapsToDevicePixels"
          Value="True" />
        <Setter Property="OverridesDefaultStyle"
          Value="True" />
        <Setter Property="Grid.IsSharedSizeScope"
          Value="true" />
        <Setter Property="HasDropShadow"
          Value="True" />

        <Setter Property="Foreground" Value="White"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">


                    <Border Margin="10" x:Name="Border"
                Background="{DynamicResource WindowBackgroundBrush1}"
                BorderThickness="1">
                        <Border.Effect>
                            <DropShadowEffect Color="Black" ShadowDepth="5" BlurRadius="8" Opacity="0.4"/>
                        </Border.Effect>
                        <Border.BorderBrush>
                            <SolidColorBrush Color="{StaticResource BorderMediumColor}" />
                        </Border.BorderBrush>
                        <StackPanel VerticalAlignment="Center" IsItemsHost="True"
                      KeyboardNavigation.DirectionalNavigation="Cycle" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow"
                   Value="true">
                            <Setter TargetName="Border"
                    Property="Padding"
                    Value="0,3,0,3" />
                            <Setter TargetName="Border"
                    Property="CornerRadius"
                    Value="4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>